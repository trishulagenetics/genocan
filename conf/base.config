/*
 * -------------------------------------------------
 *  trishulagenomics/genocan Nextflow base config file
 * -------------------------------------------------
 * A 'blank slate' config file, appropriate for general
 * use on most high performance compute environments.
 * Assumes that all software is installed and available
 * on the PATH. Runs in `local` mode - all jobs will be
 * run on the logged in environment.
 */

process {

  container = params.container

  cpus = { Runtime.getRuntime().availableProcessors() }
  memory = { Runtime.getRuntime().freeMemory() }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'

    // Process-specific resource requirements (others leave at default, e.g. Fastqc)

  withName: get_software_versions {
    memory = { check_max( 0.5.GB, 'memory' ) }
    cache = false
    executor = 'local'
    errorStrategy = 'ignore'
  }

  withName: build_minimap2_index {
    memory = { check_max( 6.GB * task.attempt, 'memory' ) }
    time = { check_max(4.h * task.attempt, 'time') }
  }
  
  withName: minimap2_align {
    memory = { check_max( 6.GB * task.attempt, 'memory' ) }
    time = { check_max(4.h * task.attempt, 'time') }
  }

  withName: fastqc {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
  
  withName: multiqc {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
  
  withName: output_documentation {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }

  withName: fastp {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }

  withName: build_fasta_index {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
  
  withName: samtools_idxstats {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }

  withName: samtools_filter {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }

   withName: qualimap {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }
  
   withName: variant_call {
    memory = { check_max( 4.GB * task.attempt, 'memory' ) }
    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'ignore' }
  }

}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 128.GB
  max_cpus = 16
  max_time = 240.h
}
